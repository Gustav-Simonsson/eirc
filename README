================================================================================
                   Eirc - An IRC client library for Erlang
================================================================================

Eirc is an IRC client library which is useful if an Erlang application need to
connect to an IRC server e.g. for a kind of notification system or similar. It
aims to implement the full protocol specified in RFC2812 and all relevant parts
in RFC1459.

== Contact ==
For feedback, comments and/or suggestions

Project: http://www.github.com/mazenharake/eirc
Blog: http://mazenharake.wordpress.com
IRC: #erlang @ freenode
MailingList: http://www.erlang.org/faq.html

== License ==
Copyright (c) 2010, Mazen Harake
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the <ORGANIZATION> nor the names of its
      contributors may be used to endorse or promote products derived from
      this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

== Compiling ==
Just run make.

== Example ==
Edit the src/eirc_example_bot.erl according to what network/user you want to use
then compile and run from the root dir like this:

$> erl -pa ebin
Erlang R13B03 (erts-5.7.4) [source] [smp:2:2] [rq:2] [async-threads:0] [hipe] 
[kernel-poll:false]

Eshell V5.7.4  (abort with ^G)
1> eirc_example_bot:start_link().
Client started...
{ok,<0.35.0>}
CMD<mazenharake> !VERSION
CMD<mazenharake> !NODE
CMD<mazenharake> !CALCULATE
CMD<mazenharake> !CRASH
CMD<mazenharake> !UNKNOWN_COMMAND
CMD<mazenharake> !MFA erlang memory [total]
CMD<mazenharake> !MFA erlang halt []
2>
$> 

In this example I sent the commands shown above (in the example they are echoed
into the shell). erlang:halt/0 is one of numerous reasons why this isn't a safe
way to allow MFAs :)
